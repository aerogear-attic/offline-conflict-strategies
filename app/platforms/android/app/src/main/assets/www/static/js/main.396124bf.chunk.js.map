{"version":3,"sources":["../../../aerogear-js-sdk/packages/sync/dist/createClient.js","../../../aerogear-js-sdk/packages/sync/dist/config/DefaultConfig.js","../../../aerogear-js-sdk/packages/core/dist/index.js","../../../aerogear-js-sdk/packages/core/dist/metrics/index.js","../../../aerogear-js-sdk/packages/core/dist/metrics/MetricsService.js","../../../aerogear-js-sdk/packages/core/dist/metrics/platform/CordovaAppMetrics.js","../../../aerogear-js-sdk/packages/core/dist/metrics/platform/CordovaDeviceMetrics.js","../../../aerogear-js-sdk/packages/core/dist/metrics/publisher/NetworkMetricsPublisher.js","../../../aerogear-js-sdk/packages/sync/dist/config/ConfigError.js","../../../aerogear-js-sdk/packages/sync/dist/conflicts/conflictLink.js","../../../aerogear-js-sdk/packages/sync/dist/links/WebsocketLink.js","queries.js","view/ListUser.js","sdk/optimisitcUIEnhancer.js","view/AddUser.js","sdk/apolloClient.js","sdk/mutations/SyncOfflineMutation.js","App.js","index.js","../../../aerogear-js-sdk/packages/sync/dist/index.js","../../../aerogear-js-sdk/packages/core/dist/Core.js","../../../aerogear-js-sdk/packages/core/dist/PlatformUtils.js","../../../aerogear-js-sdk/packages/core/dist/metrics/publisher/index.js","../../../aerogear-js-sdk/packages/sync/dist/links/LinksBuilder.js","../../../aerogear-js-sdk/packages/sync/dist/conflicts/strategies.js"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","_this","Object","defineProperty","exports","apollo_cache_inmemory_1","__webpack_require__","apollo_cache_persist_1","apollo_client_1","DefaultConfig_1","LinksBuilder_1","createClient","userConfig","clientConfig","cache","link","_a","storage","InMemoryCache","dataIdFromObject","persistCache","buildStorage","config","SyncConfig","merge","applyPlatformConfig","validate","extractConfig","defaultLinkBuilder","ApolloClient","core_1","ConfigError_1","window","localStorage","prototype","clientOptions","assign","configuration","INSTANCE","getConfigByType","serviceConfiguration","httpUrl","url","ConfigError","__export","m","p","hasOwnProperty","__importDefault","mod","__esModule","default","loglevel_1","setDefaultLevel","levels","WARN","v1_1","Core_1","PlatformUtils_1","CordovaAppMetrics_1","CordovaDeviceMetrics_1","publisher_1","MetricsService","TYPE","defaultMetrics","buildDefaultMetrics","publisher","NetworkMetricsPublisher","sendAppAndDeviceMetrics","warn","get","set","enumerable","configurable","publish","type","metrics","Error","err","isNative","payload","clientId","getClientId","timestamp","Date","getTime","data","metricsPromise","concat","map","collect","identifier","all","DEFAULT_METRICS_TYPE","catch","error","JSON","stringify","getOwnPropertyNames","getSavedClientId","saveClientId","getItem","CLIENT_ID_KEY","id","setItem","isMobileCordova","CordovaAppMetrics","CordovaDeviceMetrics","version","document","addEventListener","cordova","getAppVersion","app","getPackageName","getVersionNumber","results","appId","appVersion","sdkVersion","framework","device","platform","toLowerCase","platformVersion","model","axios_1","post","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","create","_super","message","fieldName","apollo_link_error_1","strategies_1","conflictLink","onError","operation","forward","graphQLErrors","_i","graphQLErrors_1","extensions","exception","getConflictData","resolvedConflict","conflictStrategy","strategies","diffMergeClientWins","variables","apollo_link_ws_1","defaultWebSocketLink","options","WebSocketLink","uri","connectionParams","connectionCallback","timeout","inactivityTimeout","reconnectionAttempts","reconnect","lazy","ADD_USER","gql","_templateObject","GET_USERS","_templateObject2","DELETE_USER","_templateObject3","UPDATE_USER","_templateObject4","USER_SUBSCRIPTION","_templateObject5","ListUserTable","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","arguments","inherits","createClass","key","react_default","a","createElement","Table","striped","bordered","condensed","hover","props","allUsers","item","ListUser_UserItem","React","Component","ListUser","_React$Component2","state","first","Number","handleLoadMore","bind","assertThisInitialized","fetchMore","setState","updateQuery","prev","_ref","fetchMoreResult","toConsumableArray","subscribeToMore","userUpdatesSubscription","console","log","subscriptionUpdate","_ref2","subscriptionData","isArray","newItem","userCreated","_this2","react_apollo_browser_umd","query","fetchPolicy","errorPolicy","_ref3","networkStatus","refetch","_ref3$data","_data$allUsers","info","ListUser_ListUserTable","ButtonToolbar","Button","bsStyle","onClick","handleSubscribeForMore","UserItem","_this3","loading","isOffline","updateList","readQuery","writeQuery","onUpdate","_ref5","asyncToGenerator","regenerator_default","mark","_callee","_ref4","client","optimisticResponse","wrap","_context","name","Utils","generateId","dateOfBirth","moment","toString","__typename","updateUser","objectSpread","mutate","mutation","update","refetchQueries","finish","stop","_x","incrementVersion","updateDelete","_ref6","deleteUser","newUsers","filter","user","onDelete","_ref8","_callee2","_ref7","_context2","_x2","_this4","ButtonGroup","disabled","withApollo","createNewOptimisticResponse","fields","chars","i","undefined","Math","floor","random","createUser","AddUser","_getPrototypeOf2","_len","args","_key","counter","style","marginTop","marginBottom","ctr","setupApolloClient","wsUrl","abrupt","SyncOfflineMutation","apolloClient","getOfflineData","storeKey","hasOfflineData","offlineData","addOfflineData","queue","clearOfflineData","removeItem","init","_callee3","stored","_context3","parse","sync","_callee5","uncommittedOfflineMutation","_context5","_callee4","_context4","t0","App","syncOfflineMutation","Fragment","className","AddUser_AddUser","ListUser_ListUser","ReactDOM","render","src_App_0","getElementById","lodash_find_1","metrics_1","AgsCore","services","configurations","service","getConfigById","isCordovaAndroid","isCordovaIOS","NetworkMetricsPublisher_1","apollo_link_1","apollo_link_http_1","apollo_utilities_1","conflictLink_1","WebsocketLink_1","customLinkBuilder","compositeLink","httpLink","HttpLink","links","unshift","ApolloLink","from","wsLink","split","_b","getMainDefinition","kind","deepmerge_1","server","diffMergeServerWins"],"mappings":"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","file":"static/js/main.396124bf.chunk.js","sourcesContent":["\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar _this = this;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_cache_inmemory_1 = require(\"apollo-cache-inmemory\");\n\nvar apollo_cache_persist_1 = require(\"apollo-cache-persist\");\n\nvar apollo_client_1 = require(\"apollo-client\");\n\nvar DefaultConfig_1 = require(\"./config/DefaultConfig\");\n\nvar LinksBuilder_1 = require(\"./links/LinksBuilder\");\n/**\n * Factory for creating Apollo Client\n *\n * @param options options object used to build client\n */\n\n\nexports.createClient = function (userConfig) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var clientConfig, cache, link;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          clientConfig = extractConfig(userConfig);\n          return [4\n          /*yield*/\n          , buildStorage(clientConfig)];\n\n        case 1:\n          cache = _a.sent();\n          link = LinksBuilder_1.defaultLinkBuilder(clientConfig);\n          return [2\n          /*return*/\n          , new apollo_client_1.ApolloClient({\n            link: link,\n            cache: cache\n          })];\n      }\n    });\n  });\n};\n/**\n * Extract configuration from user and external sources\n */\n\n\nfunction extractConfig(userConfig) {\n  var config = new DefaultConfig_1.SyncConfig();\n  var clientConfig = config.merge(userConfig);\n  config.applyPlatformConfig(clientConfig);\n  config.validate(config);\n  return clientConfig;\n}\n/**\n * Build storage that will be used for caching data\n *\n * @param clientConfig\n */\n\n\nfunction buildStorage(clientConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var cache, storage;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          cache = new apollo_cache_inmemory_1.InMemoryCache({\n            dataIdFromObject: function dataIdFromObject() {\n              return clientConfig.dataIdFromObject;\n            }\n          });\n          storage = clientConfig.storage;\n          return [4\n          /*yield*/\n          , apollo_cache_persist_1.persistCache({\n            cache: cache,\n            storage: storage\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , cache];\n      }\n    });\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@aerogear/core\");\n\nvar ConfigError_1 = require(\"./ConfigError\"); // Legacy platform configuration that needs to be merged into sync configuration\n\n\nvar TYPE = \"sync\";\n/**\n * Class for managing user and default configuration.\n * Default config is applied on top of user provided configuration\n */\n\nvar SyncConfig =\n/** @class */\nfunction () {\n  function SyncConfig() {\n    // Explicitly use id as id field\n    this.dataIdFromObject = \"id\"; // Use browser storage by default\n\n    this.storage = window.localStorage; // Default config can depend on parameters\n  }\n  /**\n   * Method used to join user configuration with defaults\n   */\n\n\n  SyncConfig.prototype.merge = function (clientOptions) {\n    return Object.assign(this, clientOptions);\n  };\n  /**\n   * Platform configuration that is generated and supplied by OpenShift\n   *\n   * @param config user supplied configuration\n   */\n\n\n  SyncConfig.prototype.applyPlatformConfig = function (config) {\n    var configuration = core_1.INSTANCE.getConfigByType(TYPE);\n\n    if (configuration && configuration.length > 0) {\n      var serviceConfiguration = configuration[0];\n      config.httpUrl = serviceConfiguration.url;\n    }\n  };\n\n  SyncConfig.prototype.validate = function (userConfig) {\n    if (!userConfig.httpUrl) {\n      throw new ConfigError_1.ConfigError(\"Missing server URL\", \"httpUrl\");\n    }\n  };\n\n  return SyncConfig;\n}();\n\nexports.SyncConfig = SyncConfig;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @module @aerogearservices/core\n *\n * Module used to aggregate common functionalities for AeroGear Services SDK's\n */\n\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\n\nloglevel_1.default.setDefaultLevel(loglevel_1.default.levels.WARN);\n\n__export(require(\"./Core\"));\n\n__export(require(\"./PlatformUtils\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./MetricsService\"));\n\n__export(require(\"./publisher\"));","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\n\nvar v1_1 = __importDefault(require(\"uuid/v1\"));\n\nvar Core_1 = require(\"../Core\");\n\nvar PlatformUtils_1 = require(\"../PlatformUtils\");\n\nvar CordovaAppMetrics_1 = require(\"./platform/CordovaAppMetrics\");\n\nvar CordovaDeviceMetrics_1 = require(\"./platform/CordovaDeviceMetrics\");\n\nvar publisher_1 = require(\"./publisher\");\n/**\n * AeroGear Metrics SDK\n * Provides internal api for metrics that are sent to metrics server.\n */\n\n\nvar MetricsService =\n/** @class */\nfunction () {\n  function MetricsService() {\n    var configuration = Core_1.INSTANCE.getConfigByType(MetricsService.TYPE);\n\n    if (configuration && configuration.length > 0) {\n      this.defaultMetrics = this.buildDefaultMetrics();\n      this.configuration = configuration[0];\n      this.publisher = new publisher_1.NetworkMetricsPublisher(this.configuration.url);\n      this.sendAppAndDeviceMetrics();\n    } else {\n      loglevel_1.default.warn(\"Metrics configuration is missing.\" + \"Metrics will not be published to remote server.\");\n    }\n  }\n\n  Object.defineProperty(MetricsService.prototype, \"metricsPublisher\", {\n    get: function get() {\n      return this.publisher;\n    },\n    set: function set(publisher) {\n      this.publisher = publisher;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Publish metrics using predefined publisher\n   *\n   * @param type type of the metrics to be published\n   * @param metrics metrics instances that should be published\n   */\n\n  MetricsService.prototype.publish = function (type, metrics) {\n    if (!type) {\n      throw new Error(\"Type is invalid: \" + type);\n    }\n\n    var publisher = this.publisher;\n\n    if (!publisher || !this.defaultMetrics) {\n      var err = new Error(\"Metrics server configuration is missing. Metrics will be disabled.\");\n      loglevel_1.default.warn(err);\n      return Promise.reject(err);\n    }\n\n    if (!PlatformUtils_1.isNative()) {\n      var err = new Error(\"Metrics implementation is disabled for browser platform.\");\n      loglevel_1.default.warn(err);\n      return Promise.reject(err);\n    }\n\n    var payload = {\n      clientId: this.getClientId(),\n      type: type,\n      timestamp: new Date().getTime(),\n      data: {}\n    };\n    var metricsPromise = metrics.concat(this.defaultMetrics).map(function (m) {\n      return m.collect().then(function (data) {\n        payload.data[m.identifier] = data;\n      });\n    });\n    return Promise.all(metricsPromise).then(function () {\n      return publisher.publish(payload);\n    });\n  };\n  /**\n   * Collect metrics for all active metrics collectors\n   * Send data using metrics publisher\n   */\n\n\n  MetricsService.prototype.sendAppAndDeviceMetrics = function () {\n    return this.publish(MetricsService.DEFAULT_METRICS_TYPE, []).catch(function (error) {\n      loglevel_1.default.error(\"Error when sending metrics\", JSON.stringify(error, Object.getOwnPropertyNames(error)));\n    });\n  };\n  /**\n   * Generates or gets mobile client id\n   */\n\n\n  MetricsService.prototype.getClientId = function () {\n    var clientId = this.getSavedClientId();\n\n    if (!clientId) {\n      clientId = v1_1.default();\n      this.saveClientId(clientId);\n    }\n\n    return clientId;\n  };\n\n  MetricsService.prototype.getSavedClientId = function () {\n    return window.localStorage.getItem(MetricsService.CLIENT_ID_KEY);\n  };\n\n  MetricsService.prototype.saveClientId = function (id) {\n    window.localStorage.setItem(MetricsService.CLIENT_ID_KEY, id);\n  };\n  /**\n   * Builds array of default metrics objects that are sent to server on every request.\n   * Other platforms can override this method to provide custom behavior\n   */\n\n\n  MetricsService.prototype.buildDefaultMetrics = function () {\n    if (PlatformUtils_1.isMobileCordova()) {\n      return [new CordovaAppMetrics_1.CordovaAppMetrics(), new CordovaDeviceMetrics_1.CordovaDeviceMetrics()];\n    } else {\n      // No support of other platforms in default implementation.\n      // Please extend MetricsService class.\n      loglevel_1.default.warn(\"Current platform is not supported by metrics.\");\n      return [];\n    }\n  };\n\n  MetricsService.CLIENT_ID_KEY = \"aerogear_metrics_client_key\";\n  MetricsService.DEFAULT_METRICS_TYPE = \"init\";\n  MetricsService.TYPE = \"metrics\";\n  return MetricsService;\n}();\n\nexports.MetricsService = MetricsService;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // tslint:disable-next-line:no-var-requires\n\nvar version = require(\"../../../package.json\").version;\n\nvar CordovaAppMetrics =\n/** @class */\nfunction () {\n  function CordovaAppMetrics() {\n    this.identifier = \"app\";\n  }\n  /**\n   * Get app metrics, to be called after deviceReady event.\n   *\n   * It uses cordova-plugin-app-version to get the app version, the rest of the metrics are to be\n   * filled up by the app itself.\n   * @returns {Promise<AppMetrics>} A promise containing the app metrics\n   */\n\n\n  CordovaAppMetrics.prototype.collect = function () {\n    return new Promise(function (resolve, reject) {\n      if (!document) {\n        return Promise.reject(new Error(\"Metrics not running in browser environment\"));\n      }\n\n      document.addEventListener(\"deviceready\", function () {\n        if (!window || !window.cordova || !window.cordova.getAppVersion) {\n          return reject(\"Missing required plugin to collect metrics. Verify the \" + \"@aerogear/cordova-plugin-aerogear-metrics plugin is installed.\");\n        }\n\n        var app = window.cordova.getAppVersion;\n        Promise.all([app.getPackageName(), app.getVersionNumber()]).then(function (results) {\n          var payload = {\n            appId: results[0],\n            appVersion: results[1],\n            sdkVersion: version,\n            framework: \"cordova\"\n          };\n          resolve(payload);\n        });\n      }, false);\n    });\n  };\n\n  return CordovaAppMetrics;\n}();\n\nexports.CordovaAppMetrics = CordovaAppMetrics;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CordovaDeviceMetrics =\n/** @class */\nfunction () {\n  function CordovaDeviceMetrics() {\n    this.identifier = \"device\";\n  }\n  /**\n   * Get device metrics, to be called after deviceReady event\n   *\n   * It uses cordova-plugin-device plugin.\n   * @returns {Promise<DeviceMetrics>} The device metrics\n   */\n\n\n  CordovaDeviceMetrics.prototype.collect = function () {\n    return new Promise(function (resolve, reject) {\n      if (!document) {\n        return Promise.reject(new Error(\"Metrics not running in browser environment\"));\n      }\n\n      document.addEventListener(\"deviceready\", function () {\n        if (!window || !window.device) {\n          return reject(\"Missing required plugin to collect metrics. Verify the \" + \"@aerogear/cordova-plugin-aerogear-metrics plugin is installed.\");\n        }\n\n        return resolve({\n          platform: window.device.platform.toLowerCase(),\n          platformVersion: window.device.version,\n          device: window.device.model\n        });\n      }, false);\n    });\n  };\n\n  return CordovaDeviceMetrics;\n}();\n\nexports.CordovaDeviceMetrics = CordovaDeviceMetrics;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n/**\n * Metrics publisher that sends payload to remote server\n * Publisher requires remote server URL\n */\n\n\nvar NetworkMetricsPublisher =\n/** @class */\nfunction () {\n  function NetworkMetricsPublisher(url) {\n    this.url = url;\n  }\n  /**\n   * Allows to publish metrics to external source\n   */\n\n\n  NetworkMetricsPublisher.prototype.publish = function (payload) {\n    return axios_1.default.post(this.url, payload);\n  };\n\n  return NetworkMetricsPublisher;\n}();\n\nexports.NetworkMetricsPublisher = NetworkMetricsPublisher;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * User provided configuration error\n */\n\nvar ConfigError =\n/** @class */\nfunction (_super) {\n  __extends(ConfigError, _super);\n\n  function ConfigError(message, fieldName) {\n    var _this = _super.call(this, message) || this;\n\n    _this.fieldName = fieldName;\n    return _this;\n  }\n\n  return ConfigError;\n}(Error);\n\nexports.ConfigError = ConfigError;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_link_error_1 = require(\"apollo-link-error\");\n\nvar strategies_1 = require(\"./strategies\");\n\nexports.conflictLink = function (config) {\n  /**\n  * Fetch conflict data from the errors returned from the server\n  * @param graphQLErrors array of errors to retrieve conflicted data from\n  */\n  var getConflictData = function getConflictData(graphQLErrors) {\n    if (graphQLErrors) {\n      for (var _i = 0, graphQLErrors_1 = graphQLErrors; _i < graphQLErrors_1.length; _i++) {\n        var err = graphQLErrors_1[_i];\n\n        if (err.extensions) {\n          // TODO need to add flag to check if conflict was resolved on the server\n          if (err.extensions.exception.type === \"AgSync:DataConflict\") {\n            return err.extensions.exception.data;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Fetch the conflict strategy if one is provided, if not return client wins.\n   */\n\n\n  var getConflictStrategy = function getConflictStrategy() {\n    if (config.conflictStrategy) {\n      return config.conflictStrategy;\n    } else {\n      return strategies_1.strategies.diffMergeClientWins;\n    }\n  };\n\n  return apollo_link_error_1.onError(function (_a) {\n    var operation = _a.operation,\n        forward = _a.forward,\n        graphQLErrors = _a.graphQLErrors;\n    var data = getConflictData(graphQLErrors);\n    var resolvedConflict = getConflictStrategy()(data, operation.variables); // TODO Notify\n\n    resolvedConflict.version = data.version;\n    operation.variables = resolvedConflict;\n    return forward(operation);\n  });\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_link_ws_1 = require(\"apollo-link-ws\");\n\nexports.defaultWebSocketLink = function (config) {\n  var options = config.options || {};\n  var wsLink = new apollo_link_ws_1.WebSocketLink({\n    uri: config.uri,\n    options: {\n      // Params that can be used to send authentication token etc.\n      connectionParams: options.connectionParams,\n      connectionCallback: options.connectionCallback,\n      timeout: options.timeout || 10000,\n      // How long client should wait to kill connection\n      inactivityTimeout: 10000,\n      // Large value to support offline state connections\n      reconnectionAttempts: options.reconnectionAttempts || 500,\n      // Fixed value to support going offline\n      reconnect: true,\n      // Fixed value to support clients with no subscriptions\n      lazy: true\n    }\n  });\n  return wsLink;\n};","import gql from 'graphql-tag'\n\nexport const ADD_USER = gql`\nmutation createUser($dateOfBirth: String!, $name: String!){\n    createUser(dateOfBirth: $dateOfBirth, name: $name){\n      id\n      name\n      dateOfBirth\n      version\n    }\n  }\n`\n\nexport const GET_USERS = gql`\n  query allUsers($first: Int) {\n    allUsers(first: $first){\n      id\n      name\n      dateOfBirth\n      version\n    }\n}\n`\n\nexport const DELETE_USER = gql`\nmutation deleteUser($id: ID!){\n  deleteUser(id: $id){\n    id\n    name\n    dateOfBirth\n    version\n  }\n}\n`\n\nexport const UPDATE_USER = gql`\nmutation updateUser($dateOfBirth: String, $id: ID!, $name: String, $version: Int!) {\n  updateUser(dateOfBirth: $dateOfBirth, id: $id, name: $name, version: $version) {\n    dateOfBirth\n    id\n    name\n    version\n  }\n}\n`\n\nexport const USER_SUBSCRIPTION = gql`\n  subscription userCreated {\n    userCreated {\n      id\n      name\n      dateOfBirth\n      version\n    }\n  }\n`;\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { Button, ButtonToolbar, ButtonGroup, Table } from 'react-bootstrap'\nimport moment from 'moment'\nimport { Utils } from 'pcmli.umbrella.uni-core'\nimport { withApollo } from 'react-apollo'\n\nimport { GET_USERS, USER_SUBSCRIPTION, DELETE_USER, UPDATE_USER } from '../queries'\n\nexport class ListUserTable extends React.Component {\n  render() {\n    return (\n      <Table striped bordered condensed hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Date</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.allUsers.map((item, key) => <UserItem key={key}  {...{ item }} />)}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\nexport class ListUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { first: Number(props.first) };\n    // This binding is necessary to make `this` work in the callback\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n  }\n\n  handleLoadMore(fetchMore) {\n    this.setState(state => ({\n      first: state.first * 2\n    }));\n    fetchMore({\n      variables: {\n        first: this.state.first\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, {\n          allUsers: [...prev.allUsers, ...fetchMoreResult.allUsers]\n        });\n      }\n    })\n  }\n\n  handleSubscribeForMore(subscribeToMore) {\n    if (!this.userUpdatesSubscription) {\n      this.userUpdatesSubscription = subscribeToMore({\n        document: USER_SUBSCRIPTION,\n        updateQuery: this.subscriptionUpdate,\n      })\n    } else {\n      // detect error and resubscribe if needed = UserUpdatesSubscription.catch()\n      console.log(\"Already subscribed to UserCreated updates.\")\n    }\n  }\n\n  subscriptionUpdate(prev, { subscriptionData }) {\n    console.log(prev, subscriptionData)\n    if (!subscriptionData.data) return prev;\n    if (prev.allUsers && Array.isArray(prev.allUsers)) {\n      const newItem = subscriptionData.data.userCreated;\n      console.log(\"Added new item using subscription\", newItem)\n      return {\n        allUsers: [...prev.allUsers, newItem]\n      };\n    }\n    return prev;\n  }\n\n  render() {\n    return (\n      <Query query={GET_USERS} fetchPolicy=\"cache-and-network\" errorPolicy=\"all\">\n        {({ networkStatus, subscribeToMore, fetchMore, refetch, error, data = {} }) => {\n\n          const { allUsers = [] } = data\n          if (error && networkStatus === 8) console.info(\"Network error. Using cached data\", allUsers)\n          return (\n            <div>\n              <ListUserTable allUsers={allUsers} ></ListUserTable>\n              <ButtonToolbar>\n                <Button bsStyle=\"success\" onClick={() => refetch()}>Refresh</Button>\n                <Button bsStyle=\"info\" onClick={() => this.handleLoadMore(fetchMore)}>Load more</Button>\n                <Button bsStyle=\"info\" onClick={() => this.handleSubscribeForMore(subscribeToMore)}>Subscribe for more</Button>\n              </ButtonToolbar>\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nclass UserItem extends React.Component {\n\n  state = { loading: false, isOffline: false }\n\n  constructor() {\n    super()\n    window.addEventListener('online', () => this.setState({ isOffline: false }))\n    window.addEventListener('offline', () => this.setState({ isOffline: true }))\n  }\n\n  updateList = (cache) => {\n    const { allUsers } = cache.readQuery({ query: GET_USERS })\n    cache.writeQuery({\n      query: GET_USERS,\n      data: {\n        allUsers: allUsers\n      }\n    })\n  }\n\n\n  onUpdate = async ({ item }) => {\n    const { client } = this.props\n    const { isOffline } = this.state\n    const variables = { name: `${item.name}_${Utils.generateId(1)}`, dateOfBirth: new moment().toString(), id: item.id, version: item.version }\n\n    //use the variable input as the value of optimisticResponse added on the props\n\n    const optimisticResponse = {\n      __typename: 'Mutation',\n      updateUser: {\n        __typename: 'User',\n        ...variables\n      }\n    }\n    this.setState({ loading: true })\n    if (isOffline) {\n      client.mutate({ mutation: UPDATE_USER, variables, optimisticResponse, errorPolicy: 'all', update: this.updateList })\n      this.setState({ loading: false })\n    }\n    else {\n      try {\n        await client.mutate({\n          mutation: UPDATE_USER,\n          variables,\n          optimisticResponse,\n          errorPolicy: 'all',\n          refetchQueries: [{\n            query: GET_USERS\n          }]\n        })\n      }\n      finally {\n        this.setState({ loading: false })\n      }\n    }\n  }\n\n  incrementVersion = (version) => {\n    return version + 1\n  }\n\n  updateDelete = (cache, { data: { deleteUser } }) => {\n    const { allUsers } = cache.readQuery({ query: GET_USERS })\n    const newUsers = allUsers.filter((user) => {\n      return deleteUser.id !== user.id\n    });\n    cache.writeQuery({\n      query: GET_USERS,\n      data: {\n        allUsers: newUsers\n      }\n    })\n  }\n\n  onDelete = async ({ item }) => {\n    const { client } = this.props\n    const variables = { id: item.id }\n    this.setState({ loading: true })\n    await client.mutate({ mutation: DELETE_USER, variables, update: this.updateDelete })\n    this.setState({ loading: false })\n  }\n\n\n  render() {\n    const { item } = this.props\n    const { loading } = this.state\n    return (\n      <tr>\n        <td>{item.name}</td>\n        <td>{item.dateOfBirth.toString()}</td>\n        <td>\n          <ButtonGroup>\n            <Button bsStyle=\"warning\" disabled={loading} onClick={() => this.onUpdate({ item })}>Update</Button>\n            <Button bsStyle=\"danger\" disabled={loading} onClick={() => this.onDelete({ item })}>Delete</Button>\n          </ButtonGroup>\n        </td>\n      </tr>\n    )\n  }\n\n\n}\n\nUserItem = withApollo(UserItem)\n\n\n","\nexport let ID_FIELD = \"id\";\n\nexport const generateId = (length = 8) => {\n    let result = ''\n    const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n    for (let i = length; i > 0; i -= 1) {\n        result += chars[Math.floor(Math.random() * chars.length)]\n    }\n    return result\n}\n\nexport const createNewOptimisticResponse = (operation, type, fields) => {\n    const optimisticResponse = {\n        __typename: 'Mutation',\n    }\n\n    optimisticResponse[operation] = {\n        __typename: type,\n        ...fields,\n        version: 1,\n        optimisticResponse: true\n    };\n    optimisticResponse[operation][ID_FIELD] = generateId();\n    return optimisticResponse;\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { Button } from 'react-bootstrap'\nimport { createNewOptimisticResponse } from '../sdk/optimisitcUIEnhancer'\nimport { ADD_USER, GET_USERS,  } from '../queries'\n\nconst update = (cache, { data: { createUser } }) => {\n  const { allUsers } = cache.readQuery({ query: GET_USERS })\n  cache.writeQuery({\n    query: GET_USERS,\n    data: { \"allUsers\": allUsers.concat([createUser]) }\n  })\n}\nconst setOptimisticResponse = (data) => {\n  return createNewOptimisticResponse(\"createUser\", \"User\", data)\n}\n\nexport class AddUser extends React.Component {\n\n  state = { name: 'User 1', dateOfBirth: new Date(), counter: 1 }\n\n  render() {\n    return (\n      <div style={{ \"marginTop\": \"10px\", \"marginBottom\": \"10px\" }}>\n        <Mutation mutation={ADD_USER} update={update}\n                  optimisticResponse={setOptimisticResponse(this.state)}>\n          {(createUser) => {\n            return (\n              <Button bsStyle=\"primary\" onClick={() => {\n                createUser({ variables: { name: this.state.name, dateOfBirth: this.state.dateOfBirth } })\n                const ctr = this.state.counter + 1\n                this.setState({ name: `User ${ctr}`, dateOfBirth: new Date(), counter: ctr })\n              }}>Add new</Button>\n            )\n          }}\n        </Mutation>\n\n      </div>\n    )\n  }\n}\n","import { createClient, strategies } from '@aerogear/datasync-js'\nexport const setupApolloClient = async () => {\n\n  // Local server\n  const uri = `http://localhost:4000/graphql`\n  const wsUri = `ws://localhost:4000/graphql`\n  return await createClient({ httpUrl: uri, wsUrl: wsUri, conflictStrategy: strategies.diffMergeClientWins })\n\n}\n","export class SyncOfflineMutation {\n  constructor ({apolloClient, storage} = {}) {\n    if (!apolloClient) throw new Error('Apollo Client instance is required when syncing data, please assign value to it')\n    if (!storage) throw new Error('Storage can be window.localStorage or AsyncStorage but was not set')\n\n    this.apolloClient = apolloClient\n    this.storage = storage\n    this.storeKey = 'offline-mutation-store'\n    this.offlineData = []\n  }\n\n  getOfflineData = async () => {\n    return this.storage.getItem(this.storeKey)\n  }\n\n  hasOfflineData = () => {\n    return !!(this.offlineData && this.offlineData.length > 0)\n  }\n\n  addOfflineData = (queue = []) => {\n\n    //add only if there is a value\n    if (queue && queue.length > 0)\n      this.storage.setItem(this.storeKey, JSON.stringify(queue))\n  }\n\n  clearOfflineData = async () => {\n    this.offlineData = []\n    return this.storage.removeItem(this.storeKey)\n  }\n\n  init = async () => {\n    let stored = await this.getOfflineData()\n    this.offlineData = JSON.parse(stored) || []\n  }\n\n  sync = async () => {\n    //if there is no offline data  then just exit\n    if (!this.hasOfflineData()) return\n\n    //return as promise, but in the end clear the storage\n    const uncommittedOfflineMutation = []\n\n    await Promise.all(this.offlineData.map(async (item) => {\n      try {\n        await this.apolloClient.mutate(item)\n      }\n      catch (e) {\n        //set the errored mutation to the stash\n        uncommittedOfflineMutation.push(item)\n      }\n    }))\n\n    //wait before it was cleared\n    await this.clearOfflineData()\n\n    //then add again the uncommited storage\n    this.addOfflineData(uncommittedOfflineMutation)\n\n  }\n\n}\n\n","import React, {Component} from 'react'\nimport './App.css'\nimport {ApolloProvider} from 'react-apollo'\nimport {ListUser} from './view/ListUser'\nimport {AddUser} from './view/AddUser'\nimport {setupApolloClient} from './sdk/apolloClient'\nimport {SyncOfflineMutation} from './sdk/mutations/SyncOfflineMutation'\n\nclass App extends Component {\n\n  state = {apolloClient: null}\n\n  async componentDidMount() {\n    const apolloClient = await setupApolloClient()\n\n    //if there are items that needs to be sync do it here\n    const syncOfflineMutation = new SyncOfflineMutation({apolloClient, storage: window.localStorage})\n    await syncOfflineMutation.init()\n    await syncOfflineMutation.sync()\n\n    this.setState({apolloClient})\n  }\n\n\n  render() {\n\n    const {apolloClient} = this.state\n    if (!apolloClient) return 'Loading the app'\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <React.Fragment>\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <h1 className=\"App-title\">AeroGear Sync Offline</h1>\n            </header>\n          </div>\n          <div className=\"container\">\n            {/* <SyncButton/> */}\n            <AddUser/>\n            <ListUser first=\"3\"/>\n            <div>\n            </div>\n          </div>\n\n        </React.Fragment>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import registerServiceWorker from './registerServiceWorker';\n// Disabled temporarily for development\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./createClient\"));\n\n__export(require(\"./links/LinksBuilder\"));\n\n__export(require(\"./conflicts/strategies\"));","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_find_1 = __importDefault(require(\"lodash.find\"));\n\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\n\nvar metrics_1 = require(\"./metrics\");\n/**\n * AeroGear services core class.\n * Defines internal api and helpers to be used by all top level SDK's\n */\n\n\nvar AgsCore =\n/** @class */\nfunction () {\n  function AgsCore() {}\n  /**\n   * Initialize all AeroGear services SDK's\n   *\n   * @param config configuration that should be injected to all available SDK's\n   */\n\n\n  AgsCore.prototype.init = function (config) {\n    if (!config || !config.services || config.services.length === 0) {\n      return loglevel_1.default.error(\"Invalid configuration format for AeroGear SDK\");\n    }\n\n    this.configurations = config.services;\n    this.metrics = new metrics_1.MetricsService();\n  };\n  /**\n   * Get a service configuration object, provided an existing type is given\n   * @param type - The type of the service\n   */\n\n\n  AgsCore.prototype.getConfigByType = function (type) {\n    if (this.configurations) {\n      return this.configurations.filter(function (service) {\n        return service.type && service.type.toLowerCase() === type.toLowerCase();\n      });\n    }\n  };\n  /**\n   * Get a service configuration object, provided an existing id is given\n   * @param id - unique id of the service\n   */\n\n\n  AgsCore.prototype.getConfigById = function (id) {\n    if (this.configurations) {\n      return lodash_find_1.default(this.configurations, function (service) {\n        return !!service.id && service.id.toLowerCase() === id.toLowerCase();\n      });\n    }\n\n    loglevel_1.default.error(\"Configuration not initialized.\");\n  };\n\n  return AgsCore;\n}();\n\nexports.AgsCore = AgsCore;\nexports.INSTANCE = new AgsCore();","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\n\nexports.isMobileCordova = function () {\n  return typeof window !== \"undefined\" && // tslint:disable-next-line:no-string-literal\n  !!(window[\"cordova\"] || window[\"phonegap\"] || window[\"PhoneGap\"]);\n};\n/**\n * Detect if device is running in native environment as opposite to browser platform\n *\n * @return {boolean} Is running in native\n */\n\n\nexports.isNative = function () {\n  return exports.isMobileCordova();\n};\n\nexports.isCordovaAndroid = function () {\n  return window.device.platform === \"Android\";\n};\n\nexports.isCordovaIOS = function () {\n  return window.device.platform === \"iOS\";\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NetworkMetricsPublisher_1 = require(\"./NetworkMetricsPublisher\");\n\nexports.NetworkMetricsPublisher = NetworkMetricsPublisher_1.NetworkMetricsPublisher;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_link_1 = require(\"apollo-link\");\n\nvar apollo_link_http_1 = require(\"apollo-link-http\");\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nvar conflictLink_1 = require(\"../conflicts/conflictLink\");\n\nvar WebsocketLink_1 = require(\"./WebsocketLink\");\n/**\n * Default Apollo Link builder\n * Provides out of the box functionality for the users\n */\n\n\nexports.defaultLinkBuilder = function (config) {\n  if (config.customLinkBuilder) {\n    return config.customLinkBuilder(config);\n  }\n\n  var httpLink = new apollo_link_http_1.HttpLink({\n    uri: config.httpUrl\n  }); // TODO drop your links here\n\n  var compositeLink; // TODO this only works for now because there is only one link.\n  // Will need a better strategy for when there are multiple links passed wrt ordering.\n\n  var links = [httpLink];\n\n  if (config.conflictStrategy) {\n    links.unshift(conflictLink_1.conflictLink(config));\n  }\n\n  compositeLink = apollo_link_1.ApolloLink.from([httpLink]);\n\n  if (config.wsUrl) {\n    var wsLink = WebsocketLink_1.defaultWebSocketLink({\n      uri: config.wsUrl\n    });\n    compositeLink = apollo_link_1.split(function (_a) {\n      var query = _a.query;\n\n      var _b = apollo_utilities_1.getMainDefinition(query),\n          kind = _b.kind,\n          operation = _b.operation;\n\n      return kind === \"OperationDefinition\" && operation === \"subscription\";\n    }, wsLink, compositeLink);\n  }\n\n  return compositeLink;\n};","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar deepmerge_1 = __importDefault(require(\"deepmerge\"));\n\nvar diffMergeClientWins = function diffMergeClientWins(server, client) {\n  return deepmerge_1.default(server, client);\n};\n\nvar diffMergeServerWins = function diffMergeServerWins(server, client) {\n  return deepmerge_1.default(client, server);\n};\n\nexports.strategies = {\n  diffMergeClientWins: diffMergeClientWins,\n  diffMergeServerWins: diffMergeServerWins\n};"],"sourceRoot":""}